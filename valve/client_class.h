#pragma once

#include "dt_recv.h"

enum class class_id {

	ai_base_npc = 0,
	ak47,
	base_animating,
	base_animating_overlay,
	base_attributable_item,
	base_button,
	base_combat_character,
	base_combat_weapon,
	base_cs_grenade,
	base_cs_grenade_projectile,
	base_door,
	base_entity,
	base_flex,
	base_grenade,
	base_particle_entity,
	base_player,
	base_prop_door,
	base_team_objective_resource,
	base_temp_entity,
	base_toggle,
	base_trigger,
	base_view_model,
	base_v_physics_trigger,
	base_weapon_world_model,
	beam,
	beam_spotlight,
	bone_follower,
	brc4_target,
	breach_charge,
	breach_charge_projectile,
	breakable_prop,
	breakable_surface,
	bump_mine,
	bump_mine_projectile,
	c4,
	cascade_light,
	chicken,
	color_correction,
	color_correction_volume,
	cs_game_rules_proxy,
	cs_player,
	cs_player_resource,
	cs_ragdoll,
	cs_team,
	danger_zone,
	danger_zone_controller,
	deagle,
	decoy_grenade,
	decoy_projectile,
	drone,
	dronegun,
	dynamic_light,
	dynamic_prop,
	econ_entity,
	econ_wearable,
	embers,
	entity_dissolve,
	entity_flame,
	entity_freezing,
	entity_particle_trail,
	env_ambient_light,
	env_detail_controller,
	env_dof_controller,
	env_gas_canister,
	env_particle_script,
	env_projected_texture,
	env_quadratic_beam,
	env_screen_effect,
	env_screen_overlay,
	env_tonemap_controller,
	env_wind,
	fe_player_decal,
	fire_cracker_blast,
	fire_smoke,
	fire_trail,
	fish,
	fists,
	flashbang,
	fog_controller,
	footstep_control,
	func_dust,
	func_lod,
	func_area_portal_window,
	func_brush,
	func_conveyor,
	func_ladder,
	func_monitor,
	func_move_linear,
	func_occluder,
	func_reflective_glass,
	func_rotating,
	func_smoke_volume,
	func_track_train,
	game_rules_proxy,
	grass_burn,
	handle_test,
	he_grenade,
	hostage,
	hostage_carriable_prop,
	incendiary_grenade,
	inferno,
	info_ladder_dismount,
	info_map_region,
	info_overlay_accessor,
	item_healthshot,
	item_cash,
	item_dogtags,
	knife,
	knife_gg,
	light_glow,
	map_veto_pick_controller,
	material_modify_control,
	melee,
	molotov_grenade,
	molotov_projectile,
	movie_display,
	paradrop_chopper,
	particle_fire,
	particle_performance_monitor,
	particle_system,
	phys_box,
	phys_box_multiplayer,
	physics_prop,
	physics_prop_multiplayer,
	phys_magnet,
	phys_prop_ammo_box,
	phys_prop_loot_crate,
	phys_prop_radar_jammer,
	phys_prop_weapon_upgrade,
	planted_c4,
	plasma,
	player_ping,
	player_resource,
	point_camera,
	point_commentary_node,
	point_world_text,
	pose_controller,
	post_process_controller,
	precipitation,
	precipitation_blocker,
	predicted_view_model,
	prop_hallucination,
	prop_counter,
	prop_door_rotating,
	prop_jeep,
	prop_vehicle_driveable,
	ragdoll_manager,
	ragdoll_prop,
	ragdoll_prop_attached,
	rope_keyframe,
	scar17,
	scene_entity,
	sensor_grenade,
	sensor_grenade_projectile,
	shadow_control,
	slideshow_display,
	smoke_grenade,
	smoke_grenade_projectile,
	smoke_stack,
	snowball,
	snowball_pile,
	snowball_projectile,
	spatial_entity,
	spotlight_end,
	sprite,
	sprite_oriented,
	sprite_trail,
	statue_prop,
	steam_jet,
	sun,
	sunlight_shadow_control,
	survival_spawn_chopper,
	tablet,
	team,
	teamplay_round_based_rules_proxy,
	te_armor_ricochet,
	te_base_beam,
	te_beam_ent_point,
	te_beam_ents,
	te_beam_follow,
	te_beam_laser,
	te_beam_points,
	te_beam_ring,
	te_beam_ring_point,
	te_beam_spline,
	te_blood_sprite,
	te_blood_stream,
	te_break_model,
	tebsp_decal,
	te_bubbles,
	te_bubble_trail,
	te_client_projectile,
	te_decal,
	te_dust,
	te_dynamic_light,
	te_effect_dispatch,
	te_energy_splash,
	te_explosion,
	te_fire_bullets,
	te_fizz,
	te_footprint_decal,
	te_foundry_helpers,
	te_gauss_explosion,
	te_glow_sprite,
	te_impact,
	te_kill_player_attachments,
	te_large_funnel,
	te_metal_sparks,
	te_muzzle_flash,
	te_particle_system,
	te_physics_prop,
	te_plant_bomb,
	te_player_anim_event,
	te_player_decal,
	te_projected_decal,
	te_radio_icon,
	te_shatter_surface,
	te_show_line,
	tesla,
	te_smoke,
	te_sparks,
	te_sprite,
	te_sprite_spray,
	test_proxy_toggle_networkable,
	test_traceline,
	te_world_decal,
	trigger_player_movement,
	trigger_sound_operator,
	v_gui_screen,
	vote_controller,
	water_bullet,
	water_lod_control,
	weapon_aug,
	weapon_awp,
	weapon_base_item,
	weapon_bizon,
	weapon_cs_base,
	weapon_cs_base_gun,
	weapon_cycler,
	weapon_elite,
	weapon_famas,
	weapon_five_seven,
	weapon_g3sg1,
	weapon_galil,
	weapon_galil_ar,
	weapon_glock,
	weapon_hkp2000,
	weapon_m249,
	weapon_m3,
	weapon_m4a1,
	weapon_mac10,
	weapon_mag7,
	weapon_mp5_navy,
	weapon_mp7,
	weapon_mp9,
	weapon_negev,
	weapon_nova,
	weapon_p228,
	weapon_p250,
	weapon_p90,
	weapon_sawedoff,
	weapon_scar20,
	weapon_scout,
	weapon_sg550,
	weapon_sg552,
	weapon_sg556,
	weapon_shield,
	weapon_ssg08,
	weapon_taser,
	weapon_tec9,
	weapon_tmp,
	weapon_ump45,
	weapon_usp,
	weapon_xm1014,
	weapon_zone_repulsor,
	world,
	world_vgui_text,
	dust_trail,
	movie_explosion,
	particle_smoke_grenade,
	rocket_trail,
	smoke_trail,
	spore_explosion,
	spore_trail,

};

using create_client_class = void* ( __cdecl* )( int idx, int serial );
using create_event = void* ( __cdecl* )( );

struct client_class {

	create_client_class m_create;
	create_event        m_create_event;
	char*               m_network_name;
	recv_table*         m_recv_table;
	client_class*       m_next;
	class_id         m_class_id;

};